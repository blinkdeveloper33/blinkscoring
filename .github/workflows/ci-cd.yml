name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Setup Nix
        uses: cachix/install-nix-action@v22
        with:
          nix_path: nixpkgs=channel:nixos-unstable

      - name: Nix Flake Check
        run: |
          echo 'Creating minimal flake.nix for check'
          cat > flake.nix << 'EOF'
          {
            description = "BlinkScoring ML";
            inputs.nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
            outputs = { self, nixpkgs }: {
              devShells.x86_64-linux.default = 
                let
                  pkgs = nixpkgs.legacyPackages.x86_64-linux;
                in pkgs.mkShell {
                  packages = with pkgs; [
                    python312
                    python312Packages.pip
                    python312Packages.lightgbm
                    python312Packages.shap
                    python312Packages.fastapi
                    python312Packages.uvicorn
                    python312Packages.sqlalchemy
                    python312Packages.psycopg2
                    python312Packages.pandas
                    python312Packages.numpy
                    python312Packages.requests
                  ];
                };
            };
          }
          EOF
          nix flake check

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Test common module
        run: |
          python -m unittest discover -s tests -p "test_*.py" || echo "No tests yet"

  build-deploy:
    name: Build & Deploy
    needs: test
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Install Railway CLI
        run: |
          curl -fsSL https://railway.app/install.sh | sh

      - name: Deploy to Railway
        run: |
          RAILWAY_ENV=$(echo ${{ github.ref_name }} | sed 's/main/production/;s/develop/staging/')
          echo "Deploying to $RAILWAY_ENV environment"
          railway up --environment $RAILWAY_ENV
        env:
          RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }} 